/* soapH.h
   Generated by gSOAP 2.8.16 from GetperfServiceSoapcpp2.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_long
#define SOAP_TYPE_long (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_long(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);

#ifndef soap_write_long
#define soap_write_long(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_long(soap, data),0) || soap_put_long(soap, data, "long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);

#ifndef soap_read_long
#define soap_read_long(soap, data) ( soap_begin_recv(soap) || !soap_get_long(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_ns2__downloadUpdateModule
#define SOAP_TYPE_ns2__downloadUpdateModule (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__downloadUpdateModule(struct soap*, struct ns2__downloadUpdateModule *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__downloadUpdateModule(struct soap*, const struct ns2__downloadUpdateModule *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__downloadUpdateModule(struct soap*, const char*, int, const struct ns2__downloadUpdateModule *, const char*);
SOAP_FMAC3 struct ns2__downloadUpdateModule * SOAP_FMAC4 soap_in_ns2__downloadUpdateModule(struct soap*, const char*, struct ns2__downloadUpdateModule *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__downloadUpdateModule(struct soap*, const struct ns2__downloadUpdateModule *, const char*, const char*);

#ifndef soap_write_ns2__downloadUpdateModule
#define soap_write_ns2__downloadUpdateModule(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__downloadUpdateModule(soap, data),0) || soap_put_ns2__downloadUpdateModule(soap, data, "ns2:downloadUpdateModule", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__downloadUpdateModule * SOAP_FMAC4 soap_get_ns2__downloadUpdateModule(struct soap*, struct ns2__downloadUpdateModule *, const char*, const char*);

#ifndef soap_read_ns2__downloadUpdateModule
#define soap_read_ns2__downloadUpdateModule(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__downloadUpdateModule(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__downloadUpdateModuleResponse
#define SOAP_TYPE_ns2__downloadUpdateModuleResponse (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__downloadUpdateModuleResponse(struct soap*, struct ns2__downloadUpdateModuleResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__downloadUpdateModuleResponse(struct soap*, const struct ns2__downloadUpdateModuleResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__downloadUpdateModuleResponse(struct soap*, const char*, int, const struct ns2__downloadUpdateModuleResponse *, const char*);
SOAP_FMAC3 struct ns2__downloadUpdateModuleResponse * SOAP_FMAC4 soap_in_ns2__downloadUpdateModuleResponse(struct soap*, const char*, struct ns2__downloadUpdateModuleResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__downloadUpdateModuleResponse(struct soap*, const struct ns2__downloadUpdateModuleResponse *, const char*, const char*);

#ifndef soap_write_ns2__downloadUpdateModuleResponse
#define soap_write_ns2__downloadUpdateModuleResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__downloadUpdateModuleResponse(soap, data),0) || soap_put_ns2__downloadUpdateModuleResponse(soap, data, "ns2:downloadUpdateModuleResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__downloadUpdateModuleResponse * SOAP_FMAC4 soap_get_ns2__downloadUpdateModuleResponse(struct soap*, struct ns2__downloadUpdateModuleResponse *, const char*, const char*);

#ifndef soap_read_ns2__downloadUpdateModuleResponse
#define soap_read_ns2__downloadUpdateModuleResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__downloadUpdateModuleResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__getLatestBuild
#define SOAP_TYPE_ns2__getLatestBuild (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getLatestBuild(struct soap*, struct ns2__getLatestBuild *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getLatestBuild(struct soap*, const struct ns2__getLatestBuild *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getLatestBuild(struct soap*, const char*, int, const struct ns2__getLatestBuild *, const char*);
SOAP_FMAC3 struct ns2__getLatestBuild * SOAP_FMAC4 soap_in_ns2__getLatestBuild(struct soap*, const char*, struct ns2__getLatestBuild *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getLatestBuild(struct soap*, const struct ns2__getLatestBuild *, const char*, const char*);

#ifndef soap_write_ns2__getLatestBuild
#define soap_write_ns2__getLatestBuild(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getLatestBuild(soap, data),0) || soap_put_ns2__getLatestBuild(soap, data, "ns2:getLatestBuild", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getLatestBuild * SOAP_FMAC4 soap_get_ns2__getLatestBuild(struct soap*, struct ns2__getLatestBuild *, const char*, const char*);

#ifndef soap_read_ns2__getLatestBuild
#define soap_read_ns2__getLatestBuild(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__getLatestBuild(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__getLatestBuildResponse
#define SOAP_TYPE_ns2__getLatestBuildResponse (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__getLatestBuildResponse(struct soap*, struct ns2__getLatestBuildResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__getLatestBuildResponse(struct soap*, const struct ns2__getLatestBuildResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__getLatestBuildResponse(struct soap*, const char*, int, const struct ns2__getLatestBuildResponse *, const char*);
SOAP_FMAC3 struct ns2__getLatestBuildResponse * SOAP_FMAC4 soap_in_ns2__getLatestBuildResponse(struct soap*, const char*, struct ns2__getLatestBuildResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__getLatestBuildResponse(struct soap*, const struct ns2__getLatestBuildResponse *, const char*, const char*);

#ifndef soap_write_ns2__getLatestBuildResponse
#define soap_write_ns2__getLatestBuildResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__getLatestBuildResponse(soap, data),0) || soap_put_ns2__getLatestBuildResponse(soap, data, "ns2:getLatestBuildResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__getLatestBuildResponse * SOAP_FMAC4 soap_get_ns2__getLatestBuildResponse(struct soap*, struct ns2__getLatestBuildResponse *, const char*, const char*);

#ifndef soap_read_ns2__getLatestBuildResponse
#define soap_read_ns2__getLatestBuildResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__getLatestBuildResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__registAgent
#define SOAP_TYPE_ns2__registAgent (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__registAgent(struct soap*, struct ns2__registAgent *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__registAgent(struct soap*, const struct ns2__registAgent *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__registAgent(struct soap*, const char*, int, const struct ns2__registAgent *, const char*);
SOAP_FMAC3 struct ns2__registAgent * SOAP_FMAC4 soap_in_ns2__registAgent(struct soap*, const char*, struct ns2__registAgent *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__registAgent(struct soap*, const struct ns2__registAgent *, const char*, const char*);

#ifndef soap_write_ns2__registAgent
#define soap_write_ns2__registAgent(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__registAgent(soap, data),0) || soap_put_ns2__registAgent(soap, data, "ns2:registAgent", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__registAgent * SOAP_FMAC4 soap_get_ns2__registAgent(struct soap*, struct ns2__registAgent *, const char*, const char*);

#ifndef soap_read_ns2__registAgent
#define soap_read_ns2__registAgent(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__registAgent(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__registAgentResponse
#define SOAP_TYPE_ns2__registAgentResponse (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__registAgentResponse(struct soap*, struct ns2__registAgentResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__registAgentResponse(struct soap*, const struct ns2__registAgentResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__registAgentResponse(struct soap*, const char*, int, const struct ns2__registAgentResponse *, const char*);
SOAP_FMAC3 struct ns2__registAgentResponse * SOAP_FMAC4 soap_in_ns2__registAgentResponse(struct soap*, const char*, struct ns2__registAgentResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__registAgentResponse(struct soap*, const struct ns2__registAgentResponse *, const char*, const char*);

#ifndef soap_write_ns2__registAgentResponse
#define soap_write_ns2__registAgentResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__registAgentResponse(soap, data),0) || soap_put_ns2__registAgentResponse(soap, data, "ns2:registAgentResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__registAgentResponse * SOAP_FMAC4 soap_get_ns2__registAgentResponse(struct soap*, struct ns2__registAgentResponse *, const char*, const char*);

#ifndef soap_read_ns2__registAgentResponse
#define soap_read_ns2__registAgentResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__registAgentResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__checkAgent
#define SOAP_TYPE_ns2__checkAgent (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__checkAgent(struct soap*, struct ns2__checkAgent *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__checkAgent(struct soap*, const struct ns2__checkAgent *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__checkAgent(struct soap*, const char*, int, const struct ns2__checkAgent *, const char*);
SOAP_FMAC3 struct ns2__checkAgent * SOAP_FMAC4 soap_in_ns2__checkAgent(struct soap*, const char*, struct ns2__checkAgent *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__checkAgent(struct soap*, const struct ns2__checkAgent *, const char*, const char*);

#ifndef soap_write_ns2__checkAgent
#define soap_write_ns2__checkAgent(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__checkAgent(soap, data),0) || soap_put_ns2__checkAgent(soap, data, "ns2:checkAgent", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__checkAgent * SOAP_FMAC4 soap_get_ns2__checkAgent(struct soap*, struct ns2__checkAgent *, const char*, const char*);

#ifndef soap_read_ns2__checkAgent
#define soap_read_ns2__checkAgent(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__checkAgent(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__checkAgentResponse
#define SOAP_TYPE_ns2__checkAgentResponse (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__checkAgentResponse(struct soap*, struct ns2__checkAgentResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__checkAgentResponse(struct soap*, const struct ns2__checkAgentResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__checkAgentResponse(struct soap*, const char*, int, const struct ns2__checkAgentResponse *, const char*);
SOAP_FMAC3 struct ns2__checkAgentResponse * SOAP_FMAC4 soap_in_ns2__checkAgentResponse(struct soap*, const char*, struct ns2__checkAgentResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__checkAgentResponse(struct soap*, const struct ns2__checkAgentResponse *, const char*, const char*);

#ifndef soap_write_ns2__checkAgentResponse
#define soap_write_ns2__checkAgentResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__checkAgentResponse(soap, data),0) || soap_put_ns2__checkAgentResponse(soap, data, "ns2:checkAgentResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__checkAgentResponse * SOAP_FMAC4 soap_get_ns2__checkAgentResponse(struct soap*, struct ns2__checkAgentResponse *, const char*, const char*);

#ifndef soap_read_ns2__checkAgentResponse
#define soap_read_ns2__checkAgentResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__checkAgentResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__sendMessage
#define SOAP_TYPE_ns1__sendMessage (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendMessage(struct soap*, struct ns1__sendMessage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendMessage(struct soap*, const struct ns1__sendMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendMessage(struct soap*, const char*, int, const struct ns1__sendMessage *, const char*);
SOAP_FMAC3 struct ns1__sendMessage * SOAP_FMAC4 soap_in_ns1__sendMessage(struct soap*, const char*, struct ns1__sendMessage *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendMessage(struct soap*, const struct ns1__sendMessage *, const char*, const char*);

#ifndef soap_write_ns1__sendMessage
#define soap_write_ns1__sendMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendMessage(soap, data),0) || soap_put_ns1__sendMessage(soap, data, "ns1:sendMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendMessage * SOAP_FMAC4 soap_get_ns1__sendMessage(struct soap*, struct ns1__sendMessage *, const char*, const char*);

#ifndef soap_read_ns1__sendMessage
#define soap_read_ns1__sendMessage(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendMessage(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__sendMessageResponse
#define SOAP_TYPE_ns1__sendMessageResponse (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendMessageResponse(struct soap*, struct ns1__sendMessageResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendMessageResponse(struct soap*, const struct ns1__sendMessageResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendMessageResponse(struct soap*, const char*, int, const struct ns1__sendMessageResponse *, const char*);
SOAP_FMAC3 struct ns1__sendMessageResponse * SOAP_FMAC4 soap_in_ns1__sendMessageResponse(struct soap*, const char*, struct ns1__sendMessageResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendMessageResponse(struct soap*, const struct ns1__sendMessageResponse *, const char*, const char*);

#ifndef soap_write_ns1__sendMessageResponse
#define soap_write_ns1__sendMessageResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendMessageResponse(soap, data),0) || soap_put_ns1__sendMessageResponse(soap, data, "ns1:sendMessageResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendMessageResponse * SOAP_FMAC4 soap_get_ns1__sendMessageResponse(struct soap*, struct ns1__sendMessageResponse *, const char*, const char*);

#ifndef soap_read_ns1__sendMessageResponse
#define soap_read_ns1__sendMessageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendMessageResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__downloadCertificate
#define SOAP_TYPE_ns1__downloadCertificate (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__downloadCertificate(struct soap*, struct ns1__downloadCertificate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__downloadCertificate(struct soap*, const struct ns1__downloadCertificate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__downloadCertificate(struct soap*, const char*, int, const struct ns1__downloadCertificate *, const char*);
SOAP_FMAC3 struct ns1__downloadCertificate * SOAP_FMAC4 soap_in_ns1__downloadCertificate(struct soap*, const char*, struct ns1__downloadCertificate *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__downloadCertificate(struct soap*, const struct ns1__downloadCertificate *, const char*, const char*);

#ifndef soap_write_ns1__downloadCertificate
#define soap_write_ns1__downloadCertificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__downloadCertificate(soap, data),0) || soap_put_ns1__downloadCertificate(soap, data, "ns1:downloadCertificate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__downloadCertificate * SOAP_FMAC4 soap_get_ns1__downloadCertificate(struct soap*, struct ns1__downloadCertificate *, const char*, const char*);

#ifndef soap_read_ns1__downloadCertificate
#define soap_read_ns1__downloadCertificate(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__downloadCertificate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__downloadCertificateResponse
#define SOAP_TYPE_ns1__downloadCertificateResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__downloadCertificateResponse(struct soap*, struct ns1__downloadCertificateResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__downloadCertificateResponse(struct soap*, const struct ns1__downloadCertificateResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__downloadCertificateResponse(struct soap*, const char*, int, const struct ns1__downloadCertificateResponse *, const char*);
SOAP_FMAC3 struct ns1__downloadCertificateResponse * SOAP_FMAC4 soap_in_ns1__downloadCertificateResponse(struct soap*, const char*, struct ns1__downloadCertificateResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__downloadCertificateResponse(struct soap*, const struct ns1__downloadCertificateResponse *, const char*, const char*);

#ifndef soap_write_ns1__downloadCertificateResponse
#define soap_write_ns1__downloadCertificateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__downloadCertificateResponse(soap, data),0) || soap_put_ns1__downloadCertificateResponse(soap, data, "ns1:downloadCertificateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__downloadCertificateResponse * SOAP_FMAC4 soap_get_ns1__downloadCertificateResponse(struct soap*, struct ns1__downloadCertificateResponse *, const char*, const char*);

#ifndef soap_read_ns1__downloadCertificateResponse
#define soap_read_ns1__downloadCertificateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__downloadCertificateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__sendData
#define SOAP_TYPE_ns1__sendData (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendData(struct soap*, struct ns1__sendData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendData(struct soap*, const struct ns1__sendData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendData(struct soap*, const char*, int, const struct ns1__sendData *, const char*);
SOAP_FMAC3 struct ns1__sendData * SOAP_FMAC4 soap_in_ns1__sendData(struct soap*, const char*, struct ns1__sendData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendData(struct soap*, const struct ns1__sendData *, const char*, const char*);

#ifndef soap_write_ns1__sendData
#define soap_write_ns1__sendData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendData(soap, data),0) || soap_put_ns1__sendData(soap, data, "ns1:sendData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendData * SOAP_FMAC4 soap_get_ns1__sendData(struct soap*, struct ns1__sendData *, const char*, const char*);

#ifndef soap_read_ns1__sendData
#define soap_read_ns1__sendData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__sendDataResponse
#define SOAP_TYPE_ns1__sendDataResponse (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendDataResponse(struct soap*, struct ns1__sendDataResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendDataResponse(struct soap*, const struct ns1__sendDataResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendDataResponse(struct soap*, const char*, int, const struct ns1__sendDataResponse *, const char*);
SOAP_FMAC3 struct ns1__sendDataResponse * SOAP_FMAC4 soap_in_ns1__sendDataResponse(struct soap*, const char*, struct ns1__sendDataResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendDataResponse(struct soap*, const struct ns1__sendDataResponse *, const char*, const char*);

#ifndef soap_write_ns1__sendDataResponse
#define soap_write_ns1__sendDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendDataResponse(soap, data),0) || soap_put_ns1__sendDataResponse(soap, data, "ns1:sendDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendDataResponse * SOAP_FMAC4 soap_get_ns1__sendDataResponse(struct soap*, struct ns1__sendDataResponse *, const char*, const char*);

#ifndef soap_read_ns1__sendDataResponse
#define soap_read_ns1__sendDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__reserveSender
#define SOAP_TYPE_ns1__reserveSender (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__reserveSender(struct soap*, struct ns1__reserveSender *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__reserveSender(struct soap*, const struct ns1__reserveSender *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__reserveSender(struct soap*, const char*, int, const struct ns1__reserveSender *, const char*);
SOAP_FMAC3 struct ns1__reserveSender * SOAP_FMAC4 soap_in_ns1__reserveSender(struct soap*, const char*, struct ns1__reserveSender *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__reserveSender(struct soap*, const struct ns1__reserveSender *, const char*, const char*);

#ifndef soap_write_ns1__reserveSender
#define soap_write_ns1__reserveSender(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__reserveSender(soap, data),0) || soap_put_ns1__reserveSender(soap, data, "ns1:reserveSender", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__reserveSender * SOAP_FMAC4 soap_get_ns1__reserveSender(struct soap*, struct ns1__reserveSender *, const char*, const char*);

#ifndef soap_read_ns1__reserveSender
#define soap_read_ns1__reserveSender(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__reserveSender(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__reserveSenderResponse
#define SOAP_TYPE_ns1__reserveSenderResponse (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__reserveSenderResponse(struct soap*, struct ns1__reserveSenderResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__reserveSenderResponse(struct soap*, const struct ns1__reserveSenderResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__reserveSenderResponse(struct soap*, const char*, int, const struct ns1__reserveSenderResponse *, const char*);
SOAP_FMAC3 struct ns1__reserveSenderResponse * SOAP_FMAC4 soap_in_ns1__reserveSenderResponse(struct soap*, const char*, struct ns1__reserveSenderResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__reserveSenderResponse(struct soap*, const struct ns1__reserveSenderResponse *, const char*, const char*);

#ifndef soap_write_ns1__reserveSenderResponse
#define soap_write_ns1__reserveSenderResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__reserveSenderResponse(soap, data),0) || soap_put_ns1__reserveSenderResponse(soap, data, "ns1:reserveSenderResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__reserveSenderResponse * SOAP_FMAC4 soap_get_ns1__reserveSenderResponse(struct soap*, struct ns1__reserveSenderResponse *, const char*, const char*);

#ifndef soap_read_ns1__reserveSenderResponse
#define soap_read_ns1__reserveSenderResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__reserveSenderResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__sendPerfData
#define SOAP_TYPE_ns1__sendPerfData (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendPerfData(struct soap*, struct ns1__sendPerfData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendPerfData(struct soap*, const struct ns1__sendPerfData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendPerfData(struct soap*, const char*, int, const struct ns1__sendPerfData *, const char*);
SOAP_FMAC3 struct ns1__sendPerfData * SOAP_FMAC4 soap_in_ns1__sendPerfData(struct soap*, const char*, struct ns1__sendPerfData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendPerfData(struct soap*, const struct ns1__sendPerfData *, const char*, const char*);

#ifndef soap_write_ns1__sendPerfData
#define soap_write_ns1__sendPerfData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendPerfData(soap, data),0) || soap_put_ns1__sendPerfData(soap, data, "ns1:sendPerfData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendPerfData * SOAP_FMAC4 soap_get_ns1__sendPerfData(struct soap*, struct ns1__sendPerfData *, const char*, const char*);

#ifndef soap_read_ns1__sendPerfData
#define soap_read_ns1__sendPerfData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendPerfData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__sendPerfDataResponse
#define SOAP_TYPE_ns1__sendPerfDataResponse (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendPerfDataResponse(struct soap*, struct ns1__sendPerfDataResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendPerfDataResponse(struct soap*, const struct ns1__sendPerfDataResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendPerfDataResponse(struct soap*, const char*, int, const struct ns1__sendPerfDataResponse *, const char*);
SOAP_FMAC3 struct ns1__sendPerfDataResponse * SOAP_FMAC4 soap_in_ns1__sendPerfDataResponse(struct soap*, const char*, struct ns1__sendPerfDataResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendPerfDataResponse(struct soap*, const struct ns1__sendPerfDataResponse *, const char*, const char*);

#ifndef soap_write_ns1__sendPerfDataResponse
#define soap_write_ns1__sendPerfDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendPerfDataResponse(soap, data),0) || soap_put_ns1__sendPerfDataResponse(soap, data, "ns1:sendPerfDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendPerfDataResponse * SOAP_FMAC4 soap_get_ns1__sendPerfDataResponse(struct soap*, struct ns1__sendPerfDataResponse *, const char*, const char*);

#ifndef soap_read_ns1__sendPerfDataResponse
#define soap_read_ns1__sendPerfDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendPerfDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__reserveSendPerfData
#define SOAP_TYPE_ns1__reserveSendPerfData (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__reserveSendPerfData(struct soap*, struct ns1__reserveSendPerfData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__reserveSendPerfData(struct soap*, const struct ns1__reserveSendPerfData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__reserveSendPerfData(struct soap*, const char*, int, const struct ns1__reserveSendPerfData *, const char*);
SOAP_FMAC3 struct ns1__reserveSendPerfData * SOAP_FMAC4 soap_in_ns1__reserveSendPerfData(struct soap*, const char*, struct ns1__reserveSendPerfData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__reserveSendPerfData(struct soap*, const struct ns1__reserveSendPerfData *, const char*, const char*);

#ifndef soap_write_ns1__reserveSendPerfData
#define soap_write_ns1__reserveSendPerfData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__reserveSendPerfData(soap, data),0) || soap_put_ns1__reserveSendPerfData(soap, data, "ns1:reserveSendPerfData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__reserveSendPerfData * SOAP_FMAC4 soap_get_ns1__reserveSendPerfData(struct soap*, struct ns1__reserveSendPerfData *, const char*, const char*);

#ifndef soap_read_ns1__reserveSendPerfData
#define soap_read_ns1__reserveSendPerfData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__reserveSendPerfData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__reserveSendPerfDataResponse
#define SOAP_TYPE_ns1__reserveSendPerfDataResponse (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__reserveSendPerfDataResponse(struct soap*, struct ns1__reserveSendPerfDataResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__reserveSendPerfDataResponse(struct soap*, const struct ns1__reserveSendPerfDataResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__reserveSendPerfDataResponse(struct soap*, const char*, int, const struct ns1__reserveSendPerfDataResponse *, const char*);
SOAP_FMAC3 struct ns1__reserveSendPerfDataResponse * SOAP_FMAC4 soap_in_ns1__reserveSendPerfDataResponse(struct soap*, const char*, struct ns1__reserveSendPerfDataResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__reserveSendPerfDataResponse(struct soap*, const struct ns1__reserveSendPerfDataResponse *, const char*, const char*);

#ifndef soap_write_ns1__reserveSendPerfDataResponse
#define soap_write_ns1__reserveSendPerfDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__reserveSendPerfDataResponse(soap, data),0) || soap_put_ns1__reserveSendPerfDataResponse(soap, data, "ns1:reserveSendPerfDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__reserveSendPerfDataResponse * SOAP_FMAC4 soap_get_ns1__reserveSendPerfDataResponse(struct soap*, struct ns1__reserveSendPerfDataResponse *, const char*, const char*);

#ifndef soap_read_ns1__reserveSendPerfDataResponse
#define soap_read_ns1__reserveSendPerfDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__reserveSendPerfDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__getPerfConfigFile
#define SOAP_TYPE_ns1__getPerfConfigFile (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getPerfConfigFile(struct soap*, struct ns1__getPerfConfigFile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getPerfConfigFile(struct soap*, const struct ns1__getPerfConfigFile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getPerfConfigFile(struct soap*, const char*, int, const struct ns1__getPerfConfigFile *, const char*);
SOAP_FMAC3 struct ns1__getPerfConfigFile * SOAP_FMAC4 soap_in_ns1__getPerfConfigFile(struct soap*, const char*, struct ns1__getPerfConfigFile *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getPerfConfigFile(struct soap*, const struct ns1__getPerfConfigFile *, const char*, const char*);

#ifndef soap_write_ns1__getPerfConfigFile
#define soap_write_ns1__getPerfConfigFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__getPerfConfigFile(soap, data),0) || soap_put_ns1__getPerfConfigFile(soap, data, "ns1:getPerfConfigFile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__getPerfConfigFile * SOAP_FMAC4 soap_get_ns1__getPerfConfigFile(struct soap*, struct ns1__getPerfConfigFile *, const char*, const char*);

#ifndef soap_read_ns1__getPerfConfigFile
#define soap_read_ns1__getPerfConfigFile(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getPerfConfigFile(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__getPerfConfigFileResponse
#define SOAP_TYPE_ns1__getPerfConfigFileResponse (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getPerfConfigFileResponse(struct soap*, struct ns1__getPerfConfigFileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getPerfConfigFileResponse(struct soap*, const struct ns1__getPerfConfigFileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getPerfConfigFileResponse(struct soap*, const char*, int, const struct ns1__getPerfConfigFileResponse *, const char*);
SOAP_FMAC3 struct ns1__getPerfConfigFileResponse * SOAP_FMAC4 soap_in_ns1__getPerfConfigFileResponse(struct soap*, const char*, struct ns1__getPerfConfigFileResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getPerfConfigFileResponse(struct soap*, const struct ns1__getPerfConfigFileResponse *, const char*, const char*);

#ifndef soap_write_ns1__getPerfConfigFileResponse
#define soap_write_ns1__getPerfConfigFileResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__getPerfConfigFileResponse(soap, data),0) || soap_put_ns1__getPerfConfigFileResponse(soap, data, "ns1:getPerfConfigFileResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__getPerfConfigFileResponse * SOAP_FMAC4 soap_get_ns1__getPerfConfigFileResponse(struct soap*, struct ns1__getPerfConfigFileResponse *, const char*, const char*);

#ifndef soap_read_ns1__getPerfConfigFileResponse
#define soap_read_ns1__getPerfConfigFileResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getPerfConfigFileResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__sendEventLog
#define SOAP_TYPE_ns1__sendEventLog (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendEventLog(struct soap*, struct ns1__sendEventLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendEventLog(struct soap*, const struct ns1__sendEventLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendEventLog(struct soap*, const char*, int, const struct ns1__sendEventLog *, const char*);
SOAP_FMAC3 struct ns1__sendEventLog * SOAP_FMAC4 soap_in_ns1__sendEventLog(struct soap*, const char*, struct ns1__sendEventLog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendEventLog(struct soap*, const struct ns1__sendEventLog *, const char*, const char*);

#ifndef soap_write_ns1__sendEventLog
#define soap_write_ns1__sendEventLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendEventLog(soap, data),0) || soap_put_ns1__sendEventLog(soap, data, "ns1:sendEventLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendEventLog * SOAP_FMAC4 soap_get_ns1__sendEventLog(struct soap*, struct ns1__sendEventLog *, const char*, const char*);

#ifndef soap_read_ns1__sendEventLog
#define soap_read_ns1__sendEventLog(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendEventLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns1__sendEventLogResponse
#define SOAP_TYPE_ns1__sendEventLogResponse (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendEventLogResponse(struct soap*, struct ns1__sendEventLogResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendEventLogResponse(struct soap*, const struct ns1__sendEventLogResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendEventLogResponse(struct soap*, const char*, int, const struct ns1__sendEventLogResponse *, const char*);
SOAP_FMAC3 struct ns1__sendEventLogResponse * SOAP_FMAC4 soap_in_ns1__sendEventLogResponse(struct soap*, const char*, struct ns1__sendEventLogResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendEventLogResponse(struct soap*, const struct ns1__sendEventLogResponse *, const char*, const char*);

#ifndef soap_write_ns1__sendEventLogResponse
#define soap_write_ns1__sendEventLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns1__sendEventLogResponse(soap, data),0) || soap_put_ns1__sendEventLogResponse(soap, data, "ns1:sendEventLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns1__sendEventLogResponse * SOAP_FMAC4 soap_get_ns1__sendEventLogResponse(struct soap*, struct ns1__sendEventLogResponse *, const char*, const char*);

#ifndef soap_read_ns1__sendEventLogResponse
#define soap_read_ns1__sendEventLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendEventLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTolong
#define SOAP_TYPE_PointerTolong (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTolong(struct soap*, long *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTolong(struct soap*, const char *, int, long *const*, const char *);
SOAP_FMAC3 long ** SOAP_FMAC4 soap_in_PointerTolong(struct soap*, const char*, long **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTolong(struct soap*, long *const*, const char*, const char*);

#ifndef soap_write_PointerTolong
#define soap_write_PointerTolong(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTolong(soap, data),0) || soap_put_PointerTolong(soap, data, "long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 long ** SOAP_FMAC4 soap_get_PointerTolong(struct soap*, long **, const char*, const char*);

#ifndef soap_read_PointerTolong
#define soap_read_PointerTolong(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTolong(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToint(soap, data),0) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostring
#define SOAP_TYPE_PointerTostring (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostring(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostring(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTostring(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostring(struct soap*, char **const*, const char*, const char*);

#ifndef soap_write_PointerTostring
#define soap_write_PointerTostring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostring(soap, data),0) || soap_put_PointerTostring(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTostring(struct soap*, char ***, const char*, const char*);

#ifndef soap_read_PointerTostring
#define soap_read_PointerTostring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
