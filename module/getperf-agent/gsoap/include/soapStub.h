/* soapStub.h
   Generated by gSOAP 2.8.16 from GetperfServiceSoapcpp2.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#ifndef GETPERF_GETPERF_SERVICE_SOAPCPP2_H
#define GETPERF_GETPERF_SERVICE_SOAPCPP2_H
#endif
#include "stdsoap2.h"
#if GSOAP_VERSION != 20816
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns1__sendEventLogResponse
#define SOAP_TYPE_ns1__sendEventLogResponse (9)
/* ns1:sendEventLogResponse */
struct ns1__sendEventLogResponse
{
	char **_sendEventLogReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__sendEventLog
#define SOAP_TYPE_ns1__sendEventLog (10)
/* ns1:sendEventLog */
struct ns1__sendEventLog
{
	char *_siteKey;	/* optional element of type xsd:string */
	char *_hostname;	/* optional element of type xsd:string */
	char *_lvl;	/* optional element of type xsd:string */
	char *_msg;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__getPerfConfigFileResponse
#define SOAP_TYPE_ns1__getPerfConfigFileResponse (12)
/* ns1:getPerfConfigFileResponse */
struct ns1__getPerfConfigFileResponse
{
	char **_getPerfConfigFileReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__getPerfConfigFile
#define SOAP_TYPE_ns1__getPerfConfigFile (13)
/* ns1:getPerfConfigFile */
struct ns1__getPerfConfigFile
{
	char *_siteKey;	/* optional element of type xsd:string */
	char *_hostname;	/* optional element of type xsd:string */
	char *_fileName;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__reserveSendPerfDataResponse
#define SOAP_TYPE_ns1__reserveSendPerfDataResponse (15)
/* ns1:reserveSendPerfDataResponse */
struct ns1__reserveSendPerfDataResponse
{
	char **_reserveSendPerfDataReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__reserveSendPerfData
#define SOAP_TYPE_ns1__reserveSendPerfData (16)
/* ns1:reserveSendPerfData */
struct ns1__reserveSendPerfData
{
	char *_siteKey;	/* optional element of type xsd:string */
	char *_hostname;	/* optional element of type xsd:string */
	char *_onOff;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__sendPerfDataResponse
#define SOAP_TYPE_ns1__sendPerfDataResponse (18)
/* ns1:sendPerfDataResponse */
struct ns1__sendPerfDataResponse
{
	char **_sendPerfData;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__sendPerfData
#define SOAP_TYPE_ns1__sendPerfData (19)
/* ns1:sendPerfData */
struct ns1__sendPerfData
{
	char *_siteKey;	/* optional element of type xsd:string */
	char *_hostname;	/* optional element of type xsd:string */
	char *_fileName;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__reserveSenderResponse
#define SOAP_TYPE_ns1__reserveSenderResponse (22)
/* ns1:reserveSenderResponse */
struct ns1__reserveSenderResponse
{
	char **_reserveSenderReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__reserveSender
#define SOAP_TYPE_ns1__reserveSender (23)
/* ns1:reserveSender */
struct ns1__reserveSender
{
	char *_siteKey;	/* optional element of type xsd:string */
	char *_hostname;	/* optional element of type xsd:string */
	int *_fileSize;	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__sendDataResponse
#define SOAP_TYPE_ns1__sendDataResponse (25)
/* ns1:sendDataResponse */
struct ns1__sendDataResponse
{
	char **_sendDataReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__sendData
#define SOAP_TYPE_ns1__sendData (26)
/* ns1:sendData */
struct ns1__sendData
{
	char *_siteKey;	/* optional element of type xsd:string */
	char *_hostname;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__downloadCertificateResponse
#define SOAP_TYPE_ns1__downloadCertificateResponse (30)
/* ns1:downloadCertificateResponse */
struct ns1__downloadCertificateResponse
{
	char **_downloadCertificateReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__downloadCertificate
#define SOAP_TYPE_ns1__downloadCertificate (31)
/* ns1:downloadCertificate */
struct ns1__downloadCertificate
{
	char *_siteKey;	/* optional element of type xsd:string */
	char *_hostname;	/* optional element of type xsd:string */
	long *_timestamp;	/* optional element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_ns1__sendMessageResponse
#define SOAP_TYPE_ns1__sendMessageResponse (33)
/* ns1:sendMessageResponse */
struct ns1__sendMessageResponse
{
	char **_sendMessageReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__sendMessage
#define SOAP_TYPE_ns1__sendMessage (34)
/* ns1:sendMessage */
struct ns1__sendMessage
{
	char *_siteKey;	/* optional element of type xsd:string */
	char *_hostname;	/* optional element of type xsd:string */
	int *_sererity;	/* optional element of type xsd:int */
	char *_msg;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__checkAgentResponse
#define SOAP_TYPE_ns2__checkAgentResponse (36)
/* ns2:checkAgentResponse */
struct ns2__checkAgentResponse
{
	char **_checkAgentReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__checkAgent
#define SOAP_TYPE_ns2__checkAgent (37)
/* ns2:checkAgent */
struct ns2__checkAgent
{
	char *_siteKey;	/* optional element of type xsd:string */
	char *_hostname;	/* optional element of type xsd:string */
	char *_accessKey;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__registAgentResponse
#define SOAP_TYPE_ns2__registAgentResponse (39)
/* ns2:registAgentResponse */
struct ns2__registAgentResponse
{
	char **_registAgentReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__registAgent
#define SOAP_TYPE_ns2__registAgent (40)
/* ns2:registAgent */
struct ns2__registAgent
{
	char *_siteKey;	/* optional element of type xsd:string */
	char *_hostname;	/* optional element of type xsd:string */
	char *_accessKey;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__getLatestBuildResponse
#define SOAP_TYPE_ns2__getLatestBuildResponse (42)
/* ns2:getLatestBuildResponse */
struct ns2__getLatestBuildResponse
{
	char **_getLatestBuildReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__getLatestBuild
#define SOAP_TYPE_ns2__getLatestBuild (43)
/* ns2:getLatestBuild */
struct ns2__getLatestBuild
{
	char *_moduleTag;	/* optional element of type xsd:string */
	int *_majorVer;	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__downloadUpdateModuleResponse
#define SOAP_TYPE_ns2__downloadUpdateModuleResponse (45)
/* ns2:downloadUpdateModuleResponse */
struct ns2__downloadUpdateModuleResponse
{
	char **_downloadUpdateModuleReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__downloadUpdateModule
#define SOAP_TYPE_ns2__downloadUpdateModule (46)
/* ns2:downloadUpdateModule */
struct ns2__downloadUpdateModule
{
	char *_moduleTag;	/* optional element of type xsd:string */
	int *_majorVer;	/* optional element of type xsd:int */
	int *_build;	/* optional element of type xsd:int */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (47)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (48)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (50)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (53)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (54)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__sendEventLog(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_siteKey, char *_hostname, char *_lvl, char *_msg, char **_sendEventLogReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getPerfConfigFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_siteKey, char *_hostname, char *_fileName, char **_getPerfConfigFileReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__reserveSendPerfData(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_siteKey, char *_hostname, char *_onOff, char **_reserveSendPerfDataReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__sendPerfData(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_siteKey, char *_hostname, char *_fileName, char **_sendPerfData);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__reserveSender(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_siteKey, char *_hostname, int *_fileSize, char **_reserveSenderReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__sendData(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_siteKey, char *_hostname, char **_sendDataReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__downloadCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_siteKey, char *_hostname, long *_timestamp, char **_downloadCertificateReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__sendMessage(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_siteKey, char *_hostname, int *_sererity, char *_msg, char **_sendMessageReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__checkAgent(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_siteKey, char *_hostname, char *_accessKey, char **_checkAgentReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__registAgent(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_siteKey, char *_hostname, char *_accessKey, char **_registAgentReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__getLatestBuild(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_moduleTag, int *_majorVer, char **_getLatestBuildReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__downloadUpdateModule(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_moduleTag, int *_majorVer, int *_build, char **_downloadUpdateModuleReturn);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
