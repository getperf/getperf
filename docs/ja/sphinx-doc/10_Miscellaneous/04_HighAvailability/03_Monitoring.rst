監視サーバの監視
=============================

Zabbix による監視サーバの監視手順を以下に記します。

.. note:: HA構成で稼働/待機の各ノードの監視設定手順となりますが、非HA構成の場合は待機系のみの設定の箇所を省くことで設定が可能です。

HA構成の監視設定
-----------------------------

MHAの監視は稼働系ノードのMySQLなど一部に限られるため、外部のZabbixからHA構成内の各ノードを包括的に監視設定します。
主な監視アイテムは以下の通りです。

**ノード共通の設定**

テンプレート名は "Template OS Linux - MHA" とします。監視項目は以下の通りです。

+------------------------+----------------------------------+---------------------------------+
| 監視項目               | 監視対象                         | イベント通知条件                |
+========================+==================================+=================================+
| Linux 標準テンプレート | Template OS Linux                | Linux テンプレートに準拠        |
+------------------------+----------------------------------+---------------------------------+
| MySQLサービス監視      | MySQLサービス                    | サービスがOff(0)の場合          |
+------------------------+----------------------------------+---------------------------------+
| Web監視                | 80ポート,57000ポート,58000ポート | レスポンスコードが200以外の場合 |
+------------------------+----------------------------------+---------------------------------+

**待機系のみの設定**

テンプレート名は "Template OS Linux - MHA - Standby" とします。監視項目は以下の通りです。

+-----------------+-------------+---------------------+
| 監視項目        | 監視対象    | イベント通知条件    |
+=================+=============+=====================+
| MHAサービス監視 | MHAプロセス | プロセス数が0の場合 |
+-----------------+-------------+---------------------+
| MHAログ         | MHAログ     | なし                |
+-----------------+-------------+---------------------+

ノード共通の設定
-------------------------

**Zabbix Linux 標準テンプレート監視**

Zabbix エージェントを使用して各ノードで以下の監視をします。
Zabbix エージェントのセットアップについては、 :doc:`../04_Tutorial/02_LinuxResourceMonitoring` を参照してください。
注意点として、Zabbix 設定で稼働系ノードの IP は VIP を使用してください。

::

   vi .hosts

::

   192.168.10.10 kirin  # 稼働系ノードは VIP アドレスを指定する

**MySQLサービス監視**

各ノードでMySQLサービス、MHAプロセスを監視します。
Zabbix テンプレートに以下のアイテムを登録します。

+------------+----------------------------+
| アイテム   | 値                         |
+============+============================+
| Name       | Mysql Port monitoring      |
+------------+----------------------------+
| Type       | Simple check               |
+------------+----------------------------+
| Key        | net.tcp.service[tcp,,3306] |
+------------+----------------------------+
| Show value | Service state              |
+------------+----------------------------+

設定したアイテムに以下トリガーを登録します。

+------------+---------------------------------------------------------------+
| アイテム   | 値                                                            |
+============+===============================================================+
| Name       | MySQL Server is down                                          |
+------------+---------------------------------------------------------------+
| Expression | {Template OS Linux - MHA:net.tcp.service[tcp,,3306].last()}=0 |
+------------+---------------------------------------------------------------+
| Severity   | Disaster                                                      |
+------------+---------------------------------------------------------------+

**Getperf Webサービス監視**

Zabbix Web シナリオにアイテムを登録します。以下の3 つのWebサービスの監視設定をします。

+--------+-----------------------+-------------------------------+
| Phase  | Item                  | Value                         |
+========+=======================+===============================+
| Common | Name                  | Getperf Web Service           |
+--------+-----------------------+-------------------------------+
|        | Application           | HA Cluster Monitor            |
+--------+-----------------------+-------------------------------+
| Step.1 |                       | Getperf Web Admin Service     |
+--------+-----------------------+-------------------------------+
|        | Name                  | Admin Service                 |
+--------+-----------------------+-------------------------------+
|        | URL                   | http://{HOST.IP}:57000/axis2/ |
+--------+-----------------------+-------------------------------+
|        | Required Status codes | 200                           |
+--------+-----------------------+-------------------------------+
| Step.2 |                       | Getperf Web Data Service      |
+--------+-----------------------+-------------------------------+
|        | Name                  | Data Service                  |
+--------+-----------------------+-------------------------------+
|        | URL                   | http://{HOST.IP}:58000/axis2/ |
+--------+-----------------------+-------------------------------+
|        | Required Status codes | 200                           |
+--------+-----------------------+-------------------------------+
| Step.3 |                       | Zabbix Web Console            |
+--------+-----------------------+-------------------------------+
|        | Name                  | Zabbix                        |
+--------+-----------------------+-------------------------------+
|        | URL                   | http://{HOST.IP}/zabbix/      |
+--------+-----------------------+-------------------------------+
|        | Required Status codes | 200                           |
+--------+-----------------------+-------------------------------+

設定したWebシナリオに以下トリガーを登録します。

+------------+------------------------------------------------------------------------+
| アイテム   | 値                                                                     |
+============+========================================================================+
| Name       | Getperf Web Service not respond                                        |
+------------+------------------------------------------------------------------------+
| Expression | {Template OS Linux - CLM:web.test.fail[Getperf Web Service].last(0)}#0 |
+------------+------------------------------------------------------------------------+
| Severity   | Warning                                                                |
+------------+------------------------------------------------------------------------+

待機系の設定
-------------------------

**MHAプロセス監視**

待機系用テンプレートに以下のアイテムを登録します。
テンプレート名は "Template OS Linux - MHA - StandBy" とします。
待機系のMHAプロセスを監視します。

+----------+-------------------------------+
| アイテム | 値                            |
+==========+===============================+
| Name     | MHA Manager Process           |
+----------+-------------------------------+
| Type     | Simple check                  |
+----------+-------------------------------+
| Key      | proc.num[,,,masterha_manager] |
+----------+-------------------------------+

設定したアイテムに以下トリガーを登録します。

+------------+----------------------------------------------------------------------------+
| アイテム   | 値                                                                         |
+============+============================================================================+
| Name       | MasterHA Process is down                                                   |
+------------+----------------------------------------------------------------------------+
| Expression | {Template OS Linux - MHA - StandBy:proc.num[,,,masterha_manager].last()}=0 |
+------------+----------------------------------------------------------------------------+
| Severity   | Warning                                                                    |
+------------+----------------------------------------------------------------------------+

**ログ監視**

テンプレートに以下のアイテムを登録します。
MHAログの監視をします。

+---------------------+-----------------------------------------------+
| アイテム            | 値                                            |
+=====================+===============================================+
| Name                | masterha_manager.log                          |
+---------------------+-----------------------------------------------+
| Type                | Zabbix agent(active)                          |
+---------------------+-----------------------------------------------+
| Key                 | logrt[/var/log/masterha/masterha_manager.log] |
+---------------------+-----------------------------------------------+
| Type of Information | Log                                           |
+---------------------+-----------------------------------------------+

各ノードのテンプレート適用
-------------------------

各ノードに以下のテンプレートを適用します。

+--------+----------------------------------------------------------------+
| サーバ | 適用テンプレート                                               |
+========+================================================================+
| 稼働系 | "Template OS Linux - MHA"                                      |
+--------+----------------------------------------------------------------+
| 待機系 | "Template OS Linux - MHA", "Template OS Linux - MHA - StandBy" |
+--------+----------------------------------------------------------------+

