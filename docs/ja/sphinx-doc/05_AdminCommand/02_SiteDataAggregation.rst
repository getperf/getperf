サイトデータ集計
================

使用方法
--------

sumup コマンドでエージェントからの受信データを集計します。対象となるサイトのサイトディレクトリに移動してからコマンドを実行します。手動と自動の2つのモードがあります。

手動モードは集計処理の確認用で、集計スクリプトのカスタマイズの際に行います。

::

    sumup analysis/{監視対象}/{ドメイン}/{日付}/{時刻}/{メトリック}.txt

自動モードはサイト集計デーモンを起動し、登録した集計定義を基に自動でデータ集計を行います。

::

    sumup [start|stop|restart|status]

.. note::

    新たなメトリックを登録した際は、--init オプションを追加して、集計スクリプトのひな形を作成します。

    ::

        sumup --init analysis/{新メトリックの保存パス}

手動モードの使用方法
----------------------

手動でデータ集計を行います。はじめにサイトディレクトリに移動します。

::

    cd ~/work/site1

引数に、/analysis 下のファイルパスの指定して sumup コマンドを実行します。パスはディレクトリ、ワイルドカードでの指定が可能で例を以下に記します。

例 : Linux の指定時刻 loadavg 採取データを集計

::

    sumup analysis/{監視対象}/Linux/{日付}/{時刻}/loadavg.txt

ディレクトリ指定の場合はそのディレクトリの下の全てのファイルを集計します。

例 : Linux の指定時刻の全ファイルを集計

::

    sumup analysis/{監視対象}/Linux/{日付}/{時刻}/

ワイルドカードでの指定も可能です。

例 : Linux の全監視対象の loadavg 採取データを集計

::

    sumup analysis/*/Linux/*/*/loadavg.txt

オプション
----------

--init　{受信データパス}
~~~~~~~~~~~~~~~~~~~~~~~~

データ集計スクリプトのひな形を作成するオプションです。エージェント側で新たな採取コマンドを追加した場合、監視サーバ側で新たな採取コマンドの集計スクリプトのひな形を作成します。--init オプションを追加して採取コマンドの実行結果パスを指定します。例えば、Linux 環境で新たに uptime コマンドを追加した場合の作成例は以下となります。

例 : uptime.txt 集計スクリプトひな形作成

::

    sumup --init analysis/{監視対象}/Linux/{日付}/{時刻}/uptime.txt

上記は、以下のスクリプトのひな形を作成します。

* lib/Getperf/Command/Master/Linux.pm

  Linux 定義のマスターファイル。サイト固有のデータを記述します。

* lib/Getperf/Command/Site/Linux/Uptime.pm

  uptime 実行結果の集計スクリプト。本スクリプトを編集してデータ集計の定義をします。スクリプト編集の詳細は、 `データ集計カスタマイズ <../06_CustomizeDataCollection/01_GettingStarted.html>`_ を参照してください。

--export={domain} --tar={file.tar.gz}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

指定したドメインの定義情報をエクスポートします。エクスポートファイルは他のサイトに定義をコピー(インポート)する際に使用します。ドメインとは、Linux,Windows など集計データの括りで、ノード定義、集計定義、グラフ定義、Cacti テンプレートなどの全ての定義はあるドメインに属します。--tar オプションで指定したファイルに
tar.gz 形式で圧縮します。

例： Linux ドメインのエクスポート

::

    sumup --export=Linux --tar=/tmp/domain-export-linux.tar.gz

エクスポートする対象ファイル、ディレクトリは以下の通りです。

1. 集計定義 (lib/Getperf/Command/Site/{ドメイン}/)
2. グラフ定義 (lib/graph/{ドメイン}/)
3. エージェント定義 (lib/agent/{ドメイン}/)
4. Cacti エクスポートファイル
   (lib/cacti/template/0.8.8e/cacti-host-template-{ドメイン}.xml)

4は、Cacti リポジトリデータベースから、ホストテンプレート、グラフテンプレート、データソーステンプレートをエクスポートしたファイルとなります。

.. note::

  * ドメインのリンクについて

    関連するドメインを合わせてエクスポートする場合、 package_links.json ファイルにリンクするドメインを登録することで、リンク先ドメインもまとめてエクスポートします。集計定義、グラフ定義、エージェント定義の各ディレクトリで以下の形式で、package_links.json を作成します。

    例 : lib/Getperf/Command/Site/{ドメイン}/package_links.json

    ::

      [
          "リンク先ドメイン名"
      ]

--import={domain} --tar={file.tar.gz} [--force]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

エクスポートしたファイルのインポートをします。ドメインを指定して行います。

例: Linux ドメインのインポート

::

    sumup --import=Linux --tar=/tmp/domain-export-linux.tar.gz

ドメインが登録済みの場合は処理をキャンセルします。強制的にインポートしたい場合は、--force オプションを追加してください。

--info
~~~~~~

指定サイトの情報を出力します。アクセスキー を確認したい場合は本コマンドを使用してください。

--auto
~~~~~~

OS起動時のサイト集計デーモンの自動起動を有効化します。設定は$GETPERF_HOME/config/site/ディレクトリ下に保存されます。 /etc/init.d/sumupctl
スクリプトが各サイトの設定をチェックし、有効の場合はサイト集計デーモンを起動します。

--manual
~~~~~~~~

OS起動時のサイト集計デーモンの自動起動を無効化します。サイト構成ファイルのフラグ定義 "auto_aggregate" を　0 にします。

--recover
~~~~~~~~~

データ障害などのリカバリで、受信データの再集計をしたい場合に sumup --recover コマンドを使用します。前回のデータ集計処理のチェックポイントを無視して、受信データディレクトリ/anlaysis の下にある全てのデータファイルを再集計します。

.. note::

    * 注意事項:RRDデータの更新エラーについて

      RRDtool は仕様上、過去のデータの再登録が出来ない制約があり、--recover オプションを使用しても二重登録エラーとなり更新は無効となります。

--fastrecover
~~~~~~~~~~~~~

--recover と同じ動作となりますが、/anlysis の下の全ての受信データを集計せず、直近の受信データのみ再集計します。

サイト集計デーモンの起動/停止
-----------------------------

サイト集計デーモンの起動/停止も sumup コマンドを使用します。

sumup [start\|stop\|restart\|status]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

サイト集計デーモンの起動、停止、再起動、ステータス確認を行います。

例: サイト集計デーモンのステータス確認

::

    sumup status
    Getperf Sumup daemon                      [Running]
